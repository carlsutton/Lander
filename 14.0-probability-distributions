#  Lander Chp 14 Probality Distributions
rnorm(n=10)
rnorm(n = 10, mean = 100, sd = 20)
randNorm10 <- rnorm(10)
dnorm(randNorm10)
dnorm(c(-1, 0, 1))  
#  Generate the normal variation
randNorm <- rnorm(30000)
randDensity <- dnorm(randNorm)
#  load ggplot2
require(ggplot2)
#  Plot Them
ggplot(data.frame(x = randNorm, y = randDensity)) + aes(x =x, y = y) + geom_point() + labs(x = "Random Normal Variables", y = "Density")
pnorm(randNorm10)
pnorm(c(-3, 0, 3))
pnorm(-1)
pnorm(1) - pnorm(0)
pnorm(1) - pnorm(-1)
#  A few things happen with this first line of code.
#  the idea is to build a ggplot2 object that we can build upon later
#  that is why it is saved to p
#  we take randNorm and randDensity and put them into a data.frame
#  this just gives us some flexibility
#  we add lines with geom_line(0
#  x- and y- axis labels with labs(x = "x", y = "Density")
p <- ggplot(data.frame(x = randNorm, y = randDensity)) + aes( x = x, y = y) + geom_line() + labs(x = "x", y = "Density")
#  plotting p will print a nice distribution
#  to create a shaded area under the curve we first calculate that area 
#  generate a sequence of numbers going from the far left to -1
neg1seq <- seq(from = min(randNorm), to = -1, by = 0.1)
#  build a data.frame of that sequence as x
#  the distribution values of that sequence as y
lessThanNeg1 <- data.frame(x = neg1seq, y = dnorm(neg1seq))
head(lessThanNeg1)
#  combine this with endpoints at the far left and the far right 
#  the height is 0
lessThanNeg1 <-rbind(c(min(randNorm), 0), lessThanNeg1, c(max(lessThanNeg1$x), 0))
#  use that shaded area as a polygon
p + geom_polygon(data = lessThanNeg1, aes(x = x, y = y))
#  create a similar sequence going from -1 to 1
neg1Pos1Seq <- seq(from = -1, to = 1, by = 0.1)
#  build a data.frame from that sequence as x
#  with the distribution values for that sequence as y
neg1To1 <- data.frame(x = neg1Pos1Seq, y = dnorm(neg1Pos1Seq))
head(neg1To1)
neg1To1
#  combine this with the endpoints at the far left and the far right 
#  the height is 0
neg1To1 <- rbind(c(min(neg1To1$x), 0), neg1To1, c(max(neg1To1$x), 0))
neg1To1
#  use that shaded area as a polygon
p + geom_polygon(data = neg1To1, aes(x = x, y = y))
randProb <- pnorm(randNorm)
ggplot(data.frame(x = randNorm, y = randProb)) + aes(x = x, y = y) +geom_point() + labs(x = "Random Normal Variables", y = "Probality")

